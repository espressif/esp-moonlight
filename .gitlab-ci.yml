stages:
  - build
  - deploy

variables:
  BATCH_BUILD: "1"
  V: "0"
  MAKEFLAGS: "-j5 --no-keep-going"
  IDF_CI_BUILD: "1"

before_script:
  # add gitlab ssh key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - git --version
  - git submodule update --init --recursive

.build_examples_template: &build_examples_template
  stage: build
  tags:
    - build
  image: ${IMAGE}
  artifacts:
    when: always
    paths:
      - "**/build*/size.json"
      - "**/build*/build_log.txt"
      - "**/build*/*.bin"
      # upload to s3 server to save the artifacts size
      - "**/build*/*.map"
      - "**/build*/*.elf"
      - "**/build*/flasher_args.json"
      - "**/build*/flash_project_args"
      - "**/build*/config/sdkconfig.json"
      - "**/build*/bootloader/*.bin"
      - "**/build*/bootloader/*.elf"
      - "**/build*/partition_table/*.bin"
      - size_info.txt
    expire_in: 1 week
  variables:
    # Enable ccache for all build jobs. See configure_ci_environment.sh for more ccache related settings.
    IDF_CCACHE_ENABLE: "1"
    BATCH_BUILD: "1"
    V: "0"
    WARNING_STR: ""
    IDF_CI_BUILD: "1"
    # By configuring this macro, you can append the compiled configuration file.
    # For example, using "sdkconf.etc=default" specifies the default sdkconfig file.
    EXAMPLE_CONFIG: "="
  script:
    - pip install --upgrade idf-component-manager
    - pip install idf_build_apps
    - python tools/build_apps.py ${EXAMPLE_DIR} --config ${EXAMPLE_CONFIG} -t all --default-build-targets esp32,esp32s3 -vv

build_demo:
  extends:
    - .build_examples_template
  parallel:
    matrix:
      - IMAGE: espressif/idf:release-v4.4
      - IMAGE: espressif/idf:release-v5.0
  variables:
    EXAMPLE_DIR: examples

build_docs:
    stage: build
    image: $CI_DOCKER_REGISTRY/esp32-ci-env$BOT_DOCKER_IMAGE_TAG
    tags:
        - build_docs
    artifacts:
        when: always
        paths:
            # English version of documentation
            - docs/en/sphinx-warning-log.txt
            - docs/en/_build/html
            # Chinese version of documentation
            - docs/zh_CN/sphinx-warning-log.txt
            - docs/zh_CN/_build/html
        expire_in: 1 week
    before_script:
      - echo "skip default before_script"
    script:
      - cd docs
      # make English version of documentation
      - cd en/
      - make clean && make html
      - cd ../
      # make Chinese version of documentation
      - cd zh_CN/
      - make clean && make html
      - cd ../

push_master_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v/
#  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote add github git@github.com:espressif/esp-moonlight.git
    # What the next line of script does: goes through the list of refs for all branches we push to github,
    # generates a snippet of shell which is evaluated. The snippet checks CI_BUILD_REF against the SHA
    # (aka objectname) at tip of each branch, and if any SHAs match then it checks out the local branch
    # and then pushes that ref to a corresponding github branch
    #
    # NB: In gitlab 9.x, CI_BUILD_REF was deprecated. New name is CI_COMMIT_REF. If below command suddenly
    # generates bash syntax errors, this is probably why.
    - eval $(git for-each-ref --shell bash --format 'if [ $CI_BUILD_REF == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)

